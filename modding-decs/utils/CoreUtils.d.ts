export declare function clone<T>(obj: T): T;
export declare function sleep(ms: number): Promise<unknown>;
export declare function hashCode(str: string, seed?: number): number;
export declare function getRandomElementFromArray<T>(arr: T[]): T;
export declare function compareVersions(v1: string, v2: string, maxDepth?: number): number;
export declare function keysOf<T extends string | number | symbol, V>(obj: Partial<Record<T, V>> | Record<T, V>): T[];
export declare const keysOfCached: typeof keysOf;
export declare function valuesOf<T extends string | number | symbol, V>(obj: Partial<Record<T, V>> | Record<T, V>): V[];
export declare const valuesOfCached: typeof valuesOf;
export declare function fromEntries<T extends string | number | symbol, V>(entries: [T, V][]): Record<T, V>;
export declare function addRecords<T extends string | number | symbol>(records: Partial<Record<T, number>>[]): Partial<Record<T, number>>;
export declare function nullthrows<T>(obj: T | null | undefined): T;
export declare function useComponentDidUpdate(effect: () => void, dependencies: any): void;
export declare function assertUnreachable(x: never): never;
export declare function findIndexInEnum<T>(obj: T, enumToSearch: Record<string | number | symbol, T>): number | undefined;
