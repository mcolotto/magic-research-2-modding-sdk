import { AttackTarget } from "../exploration/AttackTarget";
import { CombatStat } from "../exploration/CombatStats";
import { GameState, GameStateTransform } from "../GameState";
import { DataStore } from "../generic/DataStore";
import { TransformationType } from "../transformation/Transformation";
import { TemporaryEffect } from "./TemporaryEffect";
declare const TemporaryEffects: DataStore<TemporaryEffect>;
export { TemporaryEffects };
export type TemporaryEffectData = {
    id: string;
    setTime: number;
    endTime: number;
    target: AttackTarget;
    params: Record<string, any>;
    fromAutocast: boolean;
    fromPermacast: boolean;
    fromPouch: boolean;
    registeredClear: boolean;
    source?: AttackTarget;
};
export declare function getTemporaryEffectEndTime(state: GameState, id: string, target?: AttackTarget): number;
export declare function getTemporaryEffectEndTimeRaw(state: GameState, fullId: string): number;
export declare function getTemporaryEffectSetTime(state: GameState, id: string, target?: AttackTarget): number;
export declare function wasTemporaryEffectCleared(state: GameState, id: string, target?: AttackTarget): boolean;
export declare function hasTemporaryEffect(state: GameState, id: string, target?: AttackTarget): boolean;
export declare function hasEverHadTemporaryEffect(state: GameState, id: string): boolean;
export declare function getTemporaryEffectData(state: GameState, id: string, target?: AttackTarget, includeEvenIfExpired?: boolean): TemporaryEffectData | undefined;
export declare function getTemporaryEffects(state: GameState, filter?: (state: GameState, effect: TemporaryEffectData) => boolean): Array<TemporaryEffectData>;
export declare function getTemporaryEffectsForTarget(state: GameState, target: AttackTarget): Array<TemporaryEffectData>;
export declare const grantTemporaryEffect: (id: string, baseDurationSec: number, extra: {
    mode?: "replace" | "add";
    target?: AttackTarget;
    source?: AttackTarget;
    params?: Record<string, any>;
}) => any;
export declare function clearTemporaryEffect(this: any, id: string, target?: AttackTarget): GameStateTransform;
export declare function clearCombatTemporaryEffects(state: GameState): GameState;
export declare const getTemporaryEffectsForCommonBuff: (stat: CombatStat, type: TransformationType) => TemporaryEffect[];
export type TemporaryEffectListenerTransform = (state: GameState, temporaryEffect: TemporaryEffectData) => TemporaryEffectData;
export declare function registerTemporaryEffectListener(id: string, listener: TemporaryEffectListenerTransform, registerExpiration?: boolean): void;
export declare const TemporaryEffectExpirationListeners: DataStore<(state: GameState, effect: TemporaryEffectData) => void>;
export declare function registerTemporaryEffectCombatStatCacheClearer(id: string, stat: CombatStat): void;
